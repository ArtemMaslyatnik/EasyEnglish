services:
  nginx:
    image: nginx:latest
    container_name: nginx-services
    restart: always
    networks:
      - dbnet
    expose:
      - 8088
    ports:
      - "80:8088"
    volumes:
      - ./easyenglish/media:/home/easyenglish/media
      - ./easyenglish/static:/home/easyenglish/static
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - easyenglish
  easyenglish:
    build: ./easyenglish
    image: easyenglish
    container_name: easyenglish
    restart: always
    command: "gunicorn -c gunicorn.py config.wsgi"
    env_file:
      - .env
    links:
      - "postgres:dbps"
    networks:
      - dbnet
    volumes:
      - ./easyenglish:/home/easyenglish
    ports:
      - "8000:8000"
    depends_on:
      - postgres
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    links:
      - "postgres:db"
    networks:
      - dbnet
    depends_on:
      - postgres
  postgres:
    image: postgres:17-alpine
    container_name: psgr
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment: 
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - dbnet

volumes:
  postgres-data:

networks:
  dbnet:
    driver: bridge